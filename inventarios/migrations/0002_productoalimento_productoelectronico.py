# Generated by Django 5.2 on 2025-05-09 20:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventarios', '0001_initial'),
        ('shared_models', '0009_alter_empresa_rif'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductoAlimento',
            fields=[
                ('producto_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shared_models.producto')),
                ('fecha_elaboracion', models.DateField(help_text='Fecha en que fue elaborado el producto', verbose_name='Fecha de Elaboración')),
                ('fecha_expiracion', models.DateField(help_text='Fecha en que expira el producto', verbose_name='Fecha de Expiración')),
                ('ingredientes', models.TextField(help_text='Lista de ingredientes del producto', verbose_name='Ingredientes')),
                ('permiso_sanitario', models.CharField(blank=True, help_text='Número de permiso sanitario o registro sanitario', max_length=50, null=True, verbose_name='Permiso Sanitario')),
                ('tipo_conservacion', models.CharField(choices=[('refrigerado', 'Refrigerado'), ('congelado', 'Congelado'), ('ambiente', 'Temperatura ambiente'), ('fresco', 'Fresco'), ('seco', 'Seco')], default='ambiente', help_text='Método de conservación recomendado', max_length=20, verbose_name='Tipo de Conservación')),
                ('temperatura_minima', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura mínima de conservación en grados Celsius', max_digits=5, null=True, verbose_name='Temperatura Mínima (°C)')),
                ('temperatura_maxima', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura máxima de conservación en grados Celsius', max_digits=5, null=True, verbose_name='Temperatura Máxima (°C)')),
                ('categoria', models.CharField(choices=[('lacteo', 'Lácteo'), ('carne', 'Carne'), ('pescado', 'Pescado'), ('fruta', 'Fruta'), ('verdura', 'Verdura'), ('cereal', 'Cereal'), ('legumbre', 'Legumbre'), ('bebida', 'Bebida'), ('snack', 'Snack'), ('congelado', 'Congelado'), ('enlatado', 'Enlatado'), ('panaderia', 'Panadería'), ('otro', 'Otro')], default='otro', help_text='Categoría del alimento', max_length=20, verbose_name='Categoría')),
                ('es_organico', models.BooleanField(default=False, help_text='Indica si el producto es orgánico', verbose_name='Es Orgánico')),
                ('contiene_alergenos', models.BooleanField(default=False, help_text='Indica si el producto contiene alérgenos', verbose_name='Contiene Alérgenos')),
                ('alergenos', models.TextField(blank=True, help_text='Lista de alérgenos presentes en el producto', null=True, verbose_name='Alérgenos')),
                ('informacion_nutricional', models.JSONField(blank=True, help_text='Información nutricional en formato JSON', null=True, verbose_name='Información Nutricional')),
                ('pais_origen', models.CharField(blank=True, help_text='País de origen del producto', max_length=50, null=True, verbose_name='País de Origen')),
            ],
            options={
                'verbose_name': 'Producto Alimenticio',
                'verbose_name_plural': 'Productos Alimenticios',
            },
            bases=('shared_models.producto',),
        ),
        migrations.CreateModel(
            name='ProductoElectronico',
            fields=[
                ('producto_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shared_models.producto')),
                ('modelo', models.CharField(help_text='Modelo del producto electrónico', max_length=100, verbose_name='Modelo')),
                ('version_firmware', models.CharField(blank=True, help_text='Versión actual del firmware', max_length=50, null=True, verbose_name='Versión de Firmware')),
                ('version_software', models.CharField(blank=True, help_text='Versión actual del software', max_length=50, null=True, verbose_name='Versión de Software')),
                ('voltaje', models.CharField(help_text='Voltaje de operación (ej: 110V, 220V, 110-240V)', max_length=50, verbose_name='Voltaje')),
                ('garantia_meses', models.PositiveIntegerField(help_text='Duración de la garantía en meses', verbose_name='Garantía (meses)')),
                ('tipo', models.CharField(choices=[('computadora', 'Computadora'), ('telefono', 'Teléfono'), ('tablet', 'Tablet'), ('television', 'Televisión'), ('audio', 'Audio'), ('camara', 'Cámara'), ('videojuego', 'Videojuego'), ('electrodomestico', 'Electrodoméstico'), ('componente', 'Componente'), ('accesorio', 'Accesorio'), ('otro', 'Otro')], default='otro', help_text='Tipo de producto electrónico', max_length=20, verbose_name='Tipo')),
                ('numero_serie', models.CharField(blank=True, help_text='Número de serie del fabricante', max_length=100, null=True, verbose_name='Número de Serie')),
                ('fabricante', models.CharField(help_text='Nombre del fabricante', max_length=100, verbose_name='Fabricante')),
                ('pais_origen', models.CharField(blank=True, help_text='País de fabricación', max_length=50, null=True, verbose_name='País de Origen')),
                ('potencia', models.CharField(blank=True, help_text='Potencia en watts (ej: 100W)', max_length=50, null=True, verbose_name='Potencia')),
                ('consumo_energia', models.DecimalField(blank=True, decimal_places=2, help_text='Consumo de energía en kilowatts-hora', max_digits=10, null=True, verbose_name='Consumo de Energía (kWh)')),
                ('dimensiones', models.CharField(blank=True, help_text='Dimensiones del producto (ej: 10x20x30 cm)', max_length=100, null=True, verbose_name='Dimensiones')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, help_text='Peso en kilogramos', max_digits=10, null=True, verbose_name='Peso (kg)')),
                ('conectividad', models.JSONField(blank=True, help_text='Opciones de conectividad en formato JSON (ej: WiFi, Bluetooth, USB)', null=True, verbose_name='Conectividad')),
                ('certificaciones', models.JSONField(blank=True, help_text='Certificaciones del producto en formato JSON (ej: CE, FCC, RoHS)', null=True, verbose_name='Certificaciones')),
                ('es_reconstruido', models.BooleanField(default=False, help_text='Indica si el producto es reconstruido (refurbished)', verbose_name='Es Reconstruido')),
            ],
            options={
                'verbose_name': 'Producto Electrónico',
                'verbose_name_plural': 'Productos Electrónicos',
            },
            bases=('shared_models.producto',),
        ),
    ]
